#!/usr/bin/with-contenv bash

GENERATED_SECRET="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)"
PARAM_FILE="/config/satisfy/parameters.yml"
SATIS_FILE="${APP_PATH}/satis.json"

: ${SECRET:=$GENERATED_SECRET}

: ${REPO_NAME:=company/private-repository}
: ${HOMEPAGE:=http://localhost:8080}

: ${SSH_PRIVATE_KEY:=unset}
: ${REPO_DOMAIN_LIST:=github.com gitee.com bitbucket.org gitlab.com}

: ${CRON_ENABLED:=true}

USER_HOME=/config/satisfy

# make our folders
mkdir -p /config/satisfy/{composer,satis,log}

# check for config and make default if needed
if [[ ! -e ${PARAM_FILE} ]]; then
  cp ${APP_PATH}/config/parameters.yml.dist ${PARAM_FILE}
  sed -i "s| secret:.*$| secret: "${SECRET}"|g" ${PARAM_FILE}
fi

if [[ ! -e ${SATIS_FILE} ]]; then
  cat >${SATIS_FILE} <<EOF
{
    "name": "${REPO_NAME}",
    "homepage": "${HOMEPAGE}",
    "output-dir": "public",
    "output-html": true,
    "require-all": false,
    "require-dependencies": false,
    "require-dev-dependencies": false,
    "require-dependency-filter": true,
    "repositories": [
    ],
    "minimum-stability": "dev",
    "providers": false,
    "pretty-print": true
}
EOF
fi

# create satisfy config symlinks

symlinks=( \
${APP_PATH}/config/parameters.yml \
${APP_PATH}/var/composer \
${APP_PATH}/var/satis \
${APP_PATH}/var/log
)

for i in "${symlinks[@]}"
do
[[ -e "$i" && ! -L "$i" ]] && rm -rf "$i"
[[ ! -L "$i" ]] && ln -s /config/satisfy/"$(basename "$i")" "$i"
done

# SSH
if [[ ! -e ${USER_HOME}/.ssh ]]; then
  mkdir ${USER_HOME}/.ssh
  chmod 700 ${USER_HOME}/.ssh
fi

if [[ ! -e ${USER_HOME}/.ssh/id_rsa ]]; then
  echo "${SSH_PRIVATE_KEY}" > ${USER_HOME}/.ssh/id_rsa
  chmod 400 ${USER_HOME}/.ssh/id_rsa
fi

[[ -f ${USER_HOME}/.ssh/known_hosts ]] && \
  rm ${USER_HOME}/.ssh/known_hosts

for _DOMAIN in ${REPO_DOMAIN_LIST} ; do
  IFS=':' read -a arr <<< "${_DOMAIN}"
  if [[ "${#arr[@]}" == "2" ]]; then
      port="${arr[1]}"
      ssh-keyscan -t rsa,dsa -p "${port}" ${arr[0]} >> ${USER_HOME}/.ssh/known_hosts
  else
      ssh-keyscan -t rsa,dsa ${_DOMAIN} >> ${USER_HOME}/.ssh/known_hosts
  fi
done

# crontab
[[ ! -f "/config/satisfy/cron" ]] && \
	cp /defaults/cron /config/satisfy/cron

if [[ "${CRON_ENABLED}" == "true" ]]; then
  crontab -u abc /config/satisfy/cron
fi

# permissions
echo "Setting permissions"
chown -R abc:abc \
	/app \
	/config \
	/var/www/